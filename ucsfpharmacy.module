<?php

use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Image\Image;
use Drupal\editor\Entity\Editor;
use Drupal\media\OEmbed\Provider;

/**
 * Implements hook_form_alter().
 */
function ucsfpharmacy_form_alter(&$form, FormStateInterface $form_state, $form_id) {
	// Move published checkbox into revision information vertical pane.
	if(!empty($form['status']) && empty($form['status']['#group']) &&  !empty($form['revision_information'])) {
		$form['status']['#group'] = 'revision_information';
	}
}

/**
 * Implements hook_form_FORM_ID_alter() for media_library_add_form_upload.
 */
function ucsfpharmacy_form_media_library_add_form_upload_alter(&$form, FormStateInterface $form_state) {
	// Do only if a media file has been uploaded.
	if($media = $form_state->get('media')) {
		// Show SVG preview thumbnail in modal add media form.
		if($media[0]->getSource()->getMetadata($media[0], 'mimetype') == 'image/svg+xml') {
			if(\Drupal::service('module_handler')->moduleExists('svg_image_field')) {
				$form['media'][0]['preview']['thumbnail'] = [
					"#theme" => "svg_image_field_formatter",
	        "#uri" => $media[0]->get('field_media_svg')->entity->getFileUri(),
	      ];
			}
		}
	}
}

/**
 * Implements hook_form_FORM_ID_alter() for editor_media_dialog.
 */
function ucsfpharmacy_form_editor_media_dialog_alter(&$form, FormStateInterface $form_state) {
	// Get selected media item.
	$media_embed_element = $form_state->get('media_embed_element');
	$media = \Drupal::service('entity.repository')->loadEntityByUuid('media', $media_embed_element['data-entity-uuid']);

	// Add media item edit link.
	$form['media_item_edit_link'] = [
		'#type' => 'item',
		'#markup' => t('The options on this form apply only to this single instance of the media item.<br />
			To edit global settings (such as crop selections or other field values): <a target="_blank" href="/media/'.$media->id().'/edit">/media/'.$media->id().'/edit</a>.'),
		'#weight' => -100,
	];

	// Add data-size filter options.
	$form['size'] = array(
		'#title' => 'Size',
		'#type' => 'select',
		'#options' => [
			'100' => '100%',
			'75'  => '75%',
			'66'  => '66.66%',
			'50'  => '50%',
			'33'  => '33.33%',
			'25'  => '25%',
			'16'  => '16.66%',
		],
		'#parents' => ['attributes', 'data-size'],
		'#default_value' => empty($media_embed_element['data-size']) ? '100' : $media_embed_element['data-size'],
		'#weight' => 100,
	);

	// $form['align']['#default_value'] = 'none';
	// unset($form['align']['#options']['center']);

	$bundle = $media->bundle();
	// Remove view mode options for anything but image type.
	if($bundle != 'image') {
		unset($form['view_mode']);
	}
}

/**
 * Implements hook_ckeditor_css_alter().
 */
function ucsfpharmacy_ckeditor_css_alter(array &$css, Editor $editor) {
	// Attach media custom css to ckeditor such as for data-size filter.
	$css[] = drupal_get_path('module', 'ucsfpharmacy') . '/css/media.css';
}

/**
 * Implements template_preprocess_page().
 */
function ucsfpharmacy_preprocess_page(&$variables) {
	// Attach media custom css such as for data-size filter.
	$variables['#attached']['library'][] =  'ucsfpharmacy/media';
}

/**
 * Implements hook_oembed_resource_url_alter().
 */
function ucsfpharmacy_oembed_resource_url_alter(array &$parsed_url, Provider $provider) {
	// Always serve YouTube videos from youtube-nocookie.com.
	if ($provider->getName() === 'YouTube') {
		$parsed_url['path'] = str_replace('://youtube.com/', '://youtube-nocookie.com/', $parsed_url['path']);
	}
}

/**
 * Implements hook_ENTITY_TYPE_create() for file.
 */
function ucsfpharmacy_file_create(EntityInterface $entity) {
	// Convert PNG uploads to JPG
	if($entity->getMimeType() == 'image/png') {
	 	// Create new JPG image.
	 	$uri = $entity->getFileUri();
	  $toolkit = \Drupal::service('image.toolkit.manager')->getDefaultToolkit();
	  $image = new Image($toolkit, $uri);
	  $image->convert('jpg');
	  $image->save($uri);

	  // Replace entity metadata with new JPG metadata.
	 	$entity->setFilename($entity->getFilename() . '.jpg');
	 	$entity->setMimeType($image->getMimeType());
	 	$entity->setSize($image->getFileSize());

	 	\Drupal::messenger()->addStatus(t('PNG converted to JPG.'));
	}
}